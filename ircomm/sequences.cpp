/* This file is part of the DMComm project by BladeSabre. License: MIT. */

#include <Arduino.h>
#include "ircomm.h"

const uint16_t icWait[] PROGMEM = {'i','C','w',END, false,true,2000, END};

const uint16_t modWait[] PROGMEM = {'m','w',END, true,true,2000, END};

const uint16_t datalinkGive10pt1[] PROGMEM = {'D','L','1','0','p',END, true,false,3000,
    0,9792,2464,480,1360,480,1360,488,744,520,712,520,1328,496,736,488,744,488,784,488,1352,488,744,512,712,496,736,
    488,736,520,720,504,728,504,752,520,712,488,736,512,720,520,712,488,744,480,744,512,712,496,760,520,704,512,720,
    520,720,480,744,488,744,512,712,496,736,496,776,480,744,488,744,496,736,520,704,496,1352,488,744,488,744,488,768,
    496,1360,488,744,488,744,496,736,480,1360,488,1360,512,720,480,1384,512,712,512,720,480,752,488,744,504,728,488,
    744,496,736,496,768,520,1328,480,744,488,1360,488,744,480,1360,488,744,496,1352,512,1352,1264,WAIT,END};

const uint16_t icWhaLila2[] PROGMEM = {'i','C','b',END, false,false,2000,
    0,20,76,20,76,20,92,20,76,20,76,20,92,20,428,20,92,20,76,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,
    20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,92,20,428,20,92,
    20,76,20,76,20,92,20,76,20,76,20,444,20,76,20,92,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,
    20,76,20,444,20,92,20,76,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,604,20,1244,20,284,
    20,76,20,188,20,92,20,76,20,428,20,76,20,92,20,76,20,76,20,380,20,444,20,76,20,76,20,92,20,76,20,396,20,444,20,396,
    20,860,20,188,20,588,20,220,20,76,20,92,20,76,20,76,20,92,20,556,20,92,20,76,20,76,20,380,20,364,20,76,20,380,20,92,
    20,76,20,348,20,172,20,92,20,76,20,76,20,92,20,WAIT,
    20,76,20,92,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,444,20,92,20,76,20,76,20,76,
    20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,444,20,92,20,76,20,76,20,92,20,76,20,76,20,444,20,76,
    20,92,20,76,20,76,20,76,20,92,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,76,
    20,92,20,444,20,76,20,76,20,76,20,92,20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,92,20,76,20,604,20,1244,20,300,
    20,76,20,188,20,76,20,76,20,428,20,92,20,76,20,76,20,92,20,380,20,444,20,76,20,188,20,76,20,396,20,444,20,396,20,92,
    20,76,20,620,20,92,20,76,20,188,20,76,20,76,20,188,20,252,20,92,20,284,20,284,20,76,20,268,20,76,20,188,20,764,20,156,
    20,92,20,76,20,76,20,76,20,WAIT,
    20,76,20,92,20,76,20,76,20,76,20,76,20,460,20,76,20,76,20,76,20,76,20,92,20,76,20,444,20,76,20,92,20,76,20,76,
    20,76,20,92,20,444,20,76,20,76,20,76,20,92,20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,76,20,92,20,444,20,76,
    20,76,20,76,20,92,20,76,20,76,20,460,20,60,20,92,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,
    20,92,20,428,20,92,20,76,20,76,20,92,20,76,20,76,20,444,20,76,20,92,20,76,20,76,20,76,20,92,20,604,20,1244,20,300,
    20,76,20,172,20,92,20,76,20,428,20,76,20,76,20,92,20,76,20,380,20,428,20,92,20,76,20,76,20,92,20,380,20,412,20,380,
    20,92,20,76,20,76,20,76,20,460,20,380,20,92,20,76,20,76,20,92,20,252,20,284,20,76,20,76,20,92,20,76,20,76,20,252,
    20,92,20,76,20,76,20,76,20,76,20,92,20,188,20,236,20,188,20,76,20,76,20,76,20,92,20,WAIT,
    20,76,20,76,20,76,20,92,20,76,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,444,20,92,20,76,20,76,20,76,
    20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,92,20,428,20,92,20,76,20,76,20,92,20,76,20,76,20,444,20,76,
    20,92,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,76,
    20,92,20,444,20,76,20,76,20,92,20,76,20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,92,20,76,20,588,20,1260,20,300,
    20,76,20,188,20,76,20,92,20,428,20,76,20,76,20,92,20,76,20,380,20,444,20,92,20,76,20,76,20,76,20,380,20,428,20,396,
    20,76,20,76,20,92,20,76,20,444,20,92,20,76,20,76,20,76,20,92,20,76,20,76,20,92,20,268,20,76,20,76,20,508,20,348,
    20,76,20,76,20,188,20,284,20,92,20,236,20,188,20,76,20,76,20,92,20,76,20,WAIT,
    20,76,20,76,20,76,20,92,20,76,20,76,20,444,20,76,20,92,20,76,20,76,20,76,20,92,20,444,20,76,20,76,20,92,20,76,
    20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,76,20,92,20,444,20,76,20,76,20,76,20,92,20,76,20,76,20,444,20,92,
    20,76,20,76,20,76,20,92,20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,92,20,444,20,76,20,76,20,76,20,92,20,76,
    20,76,20,444,20,76,20,76,20,92,20,76,20,76,20,92,20,444,20,76,20,76,20,76,20,92,20,76,20,76,20,604,20,1260,20,268,
    20,76,20,188,20,76,20,92,20,428,20,76,20,76,20,76,20,92,20,396,20,428,20,76,20,92,20,76,20,76,20,380,20,428,20,380,
    20,76,20,92,20,76,20,76,20,444,20,92,20,76,20,76,20,76,20,76,20,300,20,252,20,92,20,172,20,396,20,348,20,396,20,188,
    20,188,20,236,20,188,20,76,20,76,20,76,20,92,WAIT,END};

const uint16_t * const sequences[] PROGMEM = {
    icWait,
    modWait,
    datalinkGive10pt1,
    icWhaLila2,
};

constexpr int8_t numSequences = sizeof(sequences) / sizeof(sequences[0]);

void SequenceHandler::list(Stream& output) {
    uint16_t * seqStrPGM;
    int8_t i;
    for (i = 0; i < numSequences; i ++) {
        output.write('a' + i);
        output.write(' ');
        seqStrPGM = pgm_read_ptr_near(sequences + i);
        while (pgm_read_word_near(seqStrPGM) != END) {
            output.write(pgm_read_word_near(seqStrPGM));
            seqStrPGM ++;
        }
        output.println();
    }
}

int8_t SequenceHandler::load(uint8_t id) {
    uint16_t * cursorPGM;
    int8_t i = id - 'a';
    if (i < 0 || i >= numSequences) {
        return -1;
    }
    cursorPGM = pgm_read_ptr_near(sequences + i);
    while (pgm_read_word_near(cursorPGM) != END) {
        //skip description
        cursorPGM ++;
    }
    cursorPGM ++;
    isModulated = pgm_read_word_near(cursorPGM ++);
    goFirst = pgm_read_word_near(cursorPGM ++);
    replyDelay = pgm_read_word_near(cursorPGM ++);
    durationsPGM = cursorPGM;
    return 0;
}

uint16_t SequenceHandler::get(uint16_t i) {
    return pgm_read_word_near(durationsPGM + i);
}

SequenceHandler sequenceHandler;
